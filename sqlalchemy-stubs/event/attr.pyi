from typing import Any
from .. import util

class RefCollection(util.MemoizedSlots): ...

class _ClsLevelDispatch(RefCollection):
    name: str = ...
    arg_names: Any = ...
    has_kw: Any = ...
    legacy_signatures: Any = ...
    def __init__(self, parent_dispatch_cls, fn) -> None: ...
    def insert(self, event_key, propagate): ...
    def append(self, event_key, propagate): ...
    def update_subclass(self, target): ...
    def remove(self, event_key): ...
    def clear(self): ...
    def for_modify(self, obj): ...

class _InstanceLevelDispatch(RefCollection): ...

class _EmptyListener(_InstanceLevelDispatch):
    propagate: Any = ...
    listeners: Any = ...
    parent: Any = ...
    parent_listeners: Any = ...
    name: str = ...
    def __init__(self, parent, target_cls) -> None: ...
    def for_modify(self, obj): ...
    def __call__(self, *args, **kw): ...
    def __len__(self): ...
    def __iter__(self): ...
    def __bool__(self): ...
    __nonzero__: Any = ...

class _CompoundListener(_InstanceLevelDispatch):
    def exec_once(self, *args, **kw): ...
    def __call__(self, *args, **kw): ...
    def __len__(self): ...
    def __iter__(self): ...
    def __bool__(self): ...
    __nonzero__: Any = ...

class _ListenerCollection(_CompoundListener):
    parent_listeners: Any = ...
    parent: Any = ...
    name: str = ...
    listeners: Any = ...
    propagate: Any = ...
    def __init__(self, parent, target_cls) -> None: ...
    def for_modify(self, obj): ...
    def insert(self, event_key, propagate): ...
    def append(self, event_key, propagate): ...
    def remove(self, event_key): ...
    def clear(self): ...

class _JoinedListener(_CompoundListener):
    parent: Any = ...
    name: Any = ...
    local: Any = ...
    parent_listeners: Any = ...
    def __init__(self, parent, name, local) -> None: ...
    @property
    def listeners(self): ...
    def for_modify(self, obj): ...
    def insert(self, event_key, propagate): ...
    def append(self, event_key, propagate): ...
    def remove(self, event_key): ...
    def clear(self): ...
